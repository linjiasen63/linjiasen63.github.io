<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>前端面试 on 林三木的博客</title><link>https://linjiasen63.github.io/tags/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95.html</link><description>Recent content in 前端面试 on 林三木的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 30 Dec 2020 15:10:42 +0000</lastBuildDate><atom:link href="https://linjiasen63.github.io/tags/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/index.xml" rel="self" type="application/rss+xml"/><item><title>前端面试系列：手写常见方法</title><link>https://linjiasen63.github.io/posts/programming/front/interview/coding-fn.html</link><pubDate>Wed, 30 Dec 2020 15:10:42 +0000</pubDate><guid>https://linjiasen63.github.io/posts/programming/front/interview/coding-fn.html</guid><description>1. new 原生实现：new Fn(...args)；自定义实现：newSelf(Fn, ...args)；
实现步骤：
校验传入的参数（Fn，args）（通过Array.prototype.slice获取） 创建空对象obj 将obj.__proto__赋值为Fn.prototype，obj.constructor赋值为Fn 将obj作为上下文，执行Fn 如果Fn有返回值result，则返回result；否则返回对象obj function newSelf() { var fn = Array.prototype.shift.call(arguments); if (typeof fn != &amp;#39;function&amp;#39;) { throw new Error(&amp;#34;The first param of the newSelf must be a function!&amp;#34;); } var obj = {}; obj.__proto__ = fn.prototype; obj.constructor = fn; var result = fn.apply(obj, arguments); return typeof result === &amp;#39;object&amp;#39; ? result : obj; } function Person(name) { this.name = name; } // test case var p = newSelf(Person, &amp;#39;小红&amp;#39;); console.log(&amp;#39;person str: &amp;#39;, p); console.log(&amp;#39;instanceof: &amp;#39;, p instanceof Person); 2. instanceof 原生实现：left instanceof right；自定义实现：instanceOfSelf(left, right)
实现步骤：
校验参数：left以及right 的合法性 获取obj=left.__proto; proto=right.prototype; 若obj为null，则返回false; 若obj===proto为ture，则返回true; 否则obj赋值为obj.</description></item><item><title>前端面试系列：浏览器输入url到网页展示期间发生了什么？</title><link>https://linjiasen63.github.io/posts/programming/front/interview/things-about-from-url-to-html.html</link><pubDate>Tue, 29 Dec 2020 14:42:56 +0000</pubDate><guid>https://linjiasen63.github.io/posts/programming/front/interview/things-about-from-url-to-html.html</guid><description>1. 概要流程 DNS查找，确定地址 三次握手，建立链接 客户端发送请求 服务端返回响应 浏览器解析内容 2. 详细解释 2.1 DNS查找，确定地址 依次向浏览器、操作系统、路由器询问：是否知道域名对应的DNS地址，若知道则进行三次握手； 否则向本地local DNS服务器询问，若知道则进行三次握手； 否则向运营商DNS询问根DNS的地址，之后向根DNS，询问域名对应的服务商 2.2 三次握手，建立链接 2.3 客户端发送请求 2.4 服务端返回响应 2.5 浏览器解析内容</description></item></channel></rss>